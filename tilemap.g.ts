// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level1":
            case "level1":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [], -Infinity);
            case "level2":
            case "level2":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [], -Infinity);
            case "level3":
            case "level3":return tiles.createTilemap(hex`1000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level5":
            case "level5":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level6":
            case "level6":return tiles.createTilemap(hex`1e001200040808080808080808080808080808080808080808080808080808080807010909090909090909090909060909090609090909090909090909060ba06090909090609090909010909090904080908070909060906010903090205090302020509090109010901090906090909030202050906010909090909090909090909090109010909090906090909090909090906030202020202020202020202020202020202020202020202020202020205`, img`
222222222222222222222222222222
2...........2...2..........2.2
2.222.2.22......2..22.22.222.2
2.2......2..222....2...2...2.2
2.22.22.....2.2.2.22.........2
2.....2..2.22...2..2...222.2.2
2..2.....2.2..2.2..222.2.....2
2..2..2.22....2.2............2
22.22.2....2....22.2.22.2222.2
2.....2..2.222...2.2.....2...2
2...2.2......2.....2..2......2
2.222.22..22.2.222.22.2..2...2
2.2....2..2..2...2..2.22.222.2
2222...2.....2.2.2...........2
2.2..2....2....2....22.22..2.2
2.2.22.2222..2.2.2..2...2222.2
2............2.2....2........2
222222222222222222222222222222
`, [myTiles.transparency16,sprites.castle.tilePath4,sprites.castle.tilePath8,sprites.castle.tilePath7,sprites.castle.tilePath1,sprites.castle.tilePath9,sprites.castle.tilePath6,sprites.castle.tilePath3,sprites.castle.tilePath2,sprites.skillmap.islandTile4,sprites.dungeon.collectibleInsignia,sprites.dungeon.chestClosed], TileScale.Sixteen);
            case "level4":
            case "level4":return tiles.createTilemap(hex`1e001200020808080808080808080808080808080808080808080808080808080807010b0b0b0b0b0b0b0b0b0b0b0b0b0b030404070b0b0b010b0b060b0b0b06010b020b080b07080b070b0b0b0b0b0b0b0b060b010b0b0b0b060b0b0b06010b010b0b0b0b0b0b0304040b070b010b0b0b0b010b0b0b0b0308080b06010b0b0b0b0b060b0b0b0b0b0b060b010b0b060b030808080b0b0b0b0b06010b010b0b0b060b0b060b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0208070b06010b03020b07050b0b060b0808070b03070b060b0208070b08050b060b06010b0b0b0b060b0b0b0b0b0b0b060b0b0b0b0b0b060b0b0b0b060b050b06010b0b010b0b0b0b0b060b0b0b0b0b0b0208080b070b020808050b060b06010b0b010b0304040b050b040405080b050b0b0b0b0b060b0b060b0b0b06010b0b010b0b0b0b0b0b0b0b060b0b0b060b0b0b060b0b0b0b060b060b06010b0b0b0b02080b070b0808050b060b060b0b0b060b060b0b0b0b020806010b0b080b060b0b060b0b0b0b0b0b0b0b0b0b0b0b0b060b0b060b060a06010b0b0b0b060b0b0b0b03040b04050b02080b08050b060b0b060b0b0b06010b0b0208070b0b060b0b0b0b040404050b0b060b0b0b0b0b0b0b060b06010b0b0109060b0b0b0b060b0b010b0b0b0b0b0b0b0b0b060b0208050b06010b0b010b0b0b0b0208050b0b0b0b0b02080808080b0b060b060b0b0b06030404040404040404040404040404040404040404040404040404040405`, img`
222222222222222222222222222222
2..............2222...2..2...2
2.2.2.22.2........2.2....2...2
2.2......222.2.2....2....222.2
2.....2......2.2..2.2222.....2
2.2...2..2...............222.2
2.22.22..2.222.22.2.222.22.2.2
2....2.......2......2....2.2.2
2..2.....2......222.2.2222.2.2
2..2.222.2.2222.2.....2..2...2
2..2........2...2...2....2.2.2
2....22.2.222.2.2...2.2....222
2..2.2..2.............2..2.2.2
2....2....22.22.22.22.2..2...2
2..222..2....2222..2.......2.2
2..2.2....2..2.........2.222.2
2..2....222.....22222..2.2...2
222222222222222222222222222222
`, [myTiles.transparency16,sprites.dungeon.darkGroundWest,sprites.dungeon.darkGroundNorthWest0,sprites.dungeon.darkGroundSouthWest0,sprites.dungeon.darkGroundSouth,sprites.dungeon.darkGroundSouthEast0,sprites.dungeon.darkGroundEast,sprites.dungeon.darkGroundNorthEast0,sprites.dungeon.darkGroundNorth,sprites.dungeon.collectibleInsignia,sprites.dungeon.chestClosed,myTiles.tile2], TileScale.Sixteen);
            case "level7":
            case "level7":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level8":
            case "level8":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level9":
            case "level9":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . . . . . . 2 . . . . . 2 
2 . . 2 . 2 2 2 . . . 2 . . . 2 
2 . 2 2 . 2 . 2 2 2 . 2 2 2 . 2 
2 . . . . 2 . . 2 . . . . 2 . 2 
2 . 2 . . . . . 2 . 2 2 . 2 . 2 
2 2 2 . 2 2 . . . . . . . . . 2 
2 . . . . 2 2 2 2 . 2 . 2 2 . 2 
2 . 2 2 . 2 . . . . 2 . . . . 2 
2 . . . . . . . 2 . 2 . . 2 . 2 
2 . 2 . . 2 2 . 2 2 2 2 . 2 . 2 
2 . 2 . 2 . . . 2 . . . . . . 2 
2 . . . 2 . . . . . 2 2 . 2 . 2 
2 . 2 2 2 . 2 2 2 2 2 . . 2 . 2 
2 . . . . . . . 2 . . . . . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.dungeon.floorDark2,sprites.dungeon.collectibleInsignia,sprites.dungeon.chestClosed,sprites.dungeon.floorLight2], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "myTile":
            case "tile1":return tile1;
            case "myTile0":
            case "tile2":return tile2;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
